name: Publish to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use version from package.json)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Get package version
        id: package_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"
      
      - name: Check if version tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.package_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️  Tag v${{ steps.package_version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✓ Tag v${{ steps.package_version.outputs.version }} does not exist"
          fi
      
      - name: Install dependencies
        run: npm ci || npm install
      
      - name: Run tests
        run: npm test
      
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create Git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.package_version.outputs.version }}" -m "Release v${{ steps.package_version.outputs.version }}"
          git push origin "v${{ steps.package_version.outputs.version }}"
      
      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package_version.outputs.version }}
          release_name: Release v${{ steps.package_version.outputs.version }}
          body: |
            ## Agent OS v${{ steps.package_version.outputs.version }}
            
            Install with:
            ```bash
            npx @rosstaco/agent-os init
            ```
            
            See the [full changelog](https://github.com/rosstaco/agent-os/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
